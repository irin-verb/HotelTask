

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если МодульЗанятостиНомеров.НомерЗабронирован(Бронирование, НомерГостиницы, НачалоПериода, КонецПериода) ИЛИ
		МодульЗанятостиНомеров.НомерЗаселен(Ссылка, НомерГостиницы, НачалоПериода, КонецПериода) Тогда
		Сообщить("Номер нельзя заселить на этот период!");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ПрожитыеДниПостояльца 
	Движения.ПрожитыеДниПостояльца.Записывать = Истина;
	Движение = Движения.ПрожитыеДниПостояльца.Добавить();
	Движение.Период = Дата;
	Движение.Постоялец = Постоялец;   
	Движение.КоличествоДней = (КонецПериода - НачалоПериода)/3600/24;  

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Бронирование") Тогда
		// Заполнение шапки
		КонецПериода = ДанныеЗаполнения.КонецПериода;
		НачалоПериода = ДанныеЗаполнения.НачалоПериода;
		НомерГостиницы = ДанныеЗаполнения.НомерГостиницы;
		Постоялец = ДанныеЗаполнения.Постоялец;   
		Бронирование = ДанныеЗаполнения.Ссылка;
		РасчетЗначений();
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры        


Процедура РасчетЗначений() Экспорт
	РазностьВДнях = (КонецПериода - НачалоПериода)/3600/24;  
	ОтборЦена = Новый Структура("ВидНомера", НомерГостиницы.ВидНомера);
	ЦенаНомера = РегистрыСведений.ЦеныНаНомера.ПолучитьПоследнее(НачалоПериода, ОтборЦена);       
	СуммаОплаты = РазностьВДнях * ЦенаНомера.Стоимость;  
		
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрожитыеДниПостояльцаОбороты.КоличествоДнейОборот КАК КоличествоДнейОборот
		|ИЗ
		|	РегистрНакопления.ПрожитыеДниПостояльца.Обороты КАК ПрожитыеДниПостояльцаОбороты
		|ГДЕ
		|	ПрожитыеДниПостояльцаОбороты.Постоялец = &Постоялец";    
	
	Запрос.УстановитьПараметр("Постоялец", Постоялец);	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			КоличествоПрожитыхСуток = ВыборкаДетальныеЗаписи.КоличествоДнейОборот;
		КонецЦикла;   	
	Иначе
			КоличествоПрожитыхСуток = 0;
	КонецЕсли;
      
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА        
	
	ПроцентСкидки = Окр((КоличествоПрожитыхСуток/10) + 0.5, 0, 0);   
	Если ПроцентСкидки > 20 Тогда
		ПроцентСкидки = 20;
	КонецЕсли;
	
	РасчетСуммыКУплате();

КонецПроцедуры     


Процедура РасчетСуммыКУплате()  
	СуммаОплаты = СуммаОплаты +  СуммаОплаты * (ПроцентУвеличения / 100);
	СуммаСкидки = СуммаОплаты * ПроцентСкидки / 100;
	СуммаКУплате = СуммаОплаты - СуммаСкидки;	
КонецПроцедуры

